mixin addCommentModal(answer)
    div(id=`commentModal-${answer.id}` class='comment_modal')
        form(class='comment_modal_content' action=`/comments/${answer.id}` method='post')
            input(type='hidden' name='_csrf' value=csrfToken)
            div(class='comment_container')
            label(for='comment' class="comment_label") Type your comment
            br
            textarea(class="comment_textarea" name='comment' required)
            div(class='comment_eraser')
                button(class='comment_cancelButton' type='button' id=`comment_cancelButton-${answer.id}`) Cancel
                button(class='comment_submitButton' type='submit') Submit


mixin editCommentModal(comment)
    div(id=`editCommentModal-${comment.id}` class='comment_modal')
        form(class='comment_modal_content' action=`/comments/${comment.id}/edit` method='post')
            input(type='hidden' name='_csrf' value=csrfToken)
            div(class='comment_container')
            label(for='comment' class="comment_label") Type your comment
            br
            textarea(class="comment_textarea" name='comment' required)=comment.comment
            div(class='comment_eraser')
                button(class='edit_comment_cancelButton' type='button' id=`edit_comment_cancelButton-${comment.id}`) Cancel
                button(class='edit_comment_submitButton' type='submit') Submit


mixin editQuestionModal(question,categories)
  div(id='editQuestionModal' class='modal')
    form(class='modal-content' action=`/questions/${question.id}/edit` method='post')
      input(type='hidden' name='_csrf' value=csrfToken)
      div(class='editcontainer')
        label(for='title') Title
        input(type='text' name='title' required value=question.title)
        br
        label(for='content') Type your question here
        input(type='text' placeholder='Start your question with "What","How","Why",etc.' name='content' required value=question.content)
        br
        label(for="categoryId") Catogory:
        select(id="categorySelector" class="categorySelector"  name="categoryId" required="required" )
          each category in categories
            option(value=category.id id='selectOption' selected=category.id===question.id)=category.name
        div(class='eraser')
          button(class='cancelButton' type='button' id='question_edit_cancelButton') Cancel
          button(class='submitButton' type='submit' id='question_edit_submitButton') Submit


mixin validationErrorSummary(errors)
  if errors
    div(class='alert' role='alert')
      p The following error(s) occurred:
      ul
        each error in errors
          li= error


mixin generateCategories(category)
  a(class='categoryName' href=`/categories/${category.id}`) #{category.name}

mixin usersQuestion(question)
  div(id="posted-q" class="posted-q")
    div(class='q_label question_label') Question
    div(class="q_header")
      a(href=`/users/${question.userId}`)
        img(class='q_profile_photo' id=`${question.userId}` src=question.user.profilePhoto)
      div(class='q_header_info')
        div(class="q_username")=question.user.name
        div(class="q_profession_and_date")
          div(class="profession")=question.user.profession
          div(class='date_updated')=question.updatedAt
    span(class="q_title")
        a(class="questionLink" href=`/questions/${question.id}`)=question.title
    p(class="question")=question.content
    if locals.authenticated
      div(class="post_answer_block")
      form(action="/answers" method="POST")
        input(type='hidden' name='_csrf' value=csrfToken)
        input(type='hidden' name='questionId' value=question.id)
        label(for='answerText' class="post_answer_label") Have an answer?
        input(type=textarea name='answerText' class="post_answer_textarea")
        button(type="submit" class="post_answer_btn") Answer





mixin usersComment(comment, showCommentEditDeleteButtons )
    div(id=`commentDiv-${comment.id}` class="commentDiv")
        div
        div( class='q_label comment_label') Comments
        div(class="q_header comment_header")
            img(class='q_profile_photo comment_profile_photo' id=`${comment.userId}` src=comment.user.profilePhoto)
            div(class='q_header_info comment_header_info')
                div(class="q_username comment_username")=comment.user.name
                div
                div(class="q_profession_and_date comment_profession_and_date")
                div
                div(class="profession comment-profession")=comment.user.profession
                div
                div(class='date_updated comment_date_updated')=comment.updatedAt
                div
                p(class="question comment")=comment.comment
        if showCommentEditDeleteButtons && locals.user && locals.user.id === comment.userId
          div(class='comment_edit_delete_buttons' id=`comment_edit_delete_buttons-${comment.id}`)
              button(id=`comment_edit_button-${comment.id}` class="comment_edit") Edit Comment
              +editCommentModal(comment)
              button(id=`comment_delete_button-${comment.id}` class="comment_delete") Delete Comment


mixin questionAnswers(answer, showAddCommentButton, questionId)
  div.answer_body
    div(class=' answer_label') Answer
    div.answer_head
      a.answer_a(href=`/users/${answer.userId}`)
        img.answer_profile_pic(id=`${answer.userId}` src=answer.user.profilePhoto)
      div.answer_header_info
        div.answer_username=answer.user.name
        div
        div.answer_profession_and_date
        div
        div(class="answer_profession")=answer.user.profession
        div
        div(class='answer_date_updated')=answer.updatedAt
        p.question=answer.answer
        div.answer_buttons
          div(class='like_field' id=`likeNum_${answer.id}`)
            i(class="far fa-heart" id=`heart_${answer.id}`)
            span(class="like_count" id=`count_${answer.id}`) 0
          if answer.comments.length
              button(id=`show_comment_for_answer-${answer.id}` class="collapsible show_comment_button")
                i(id=`show_comment_icon-${answer.id}` class="far fa-comment")
                span(class="totalcomments")=answer.comments.length
          if showAddCommentButton && locals.user
            button(id=`comment_creation_button-${answer.id}` class="comment-creation-button" type=submit) Add Comments
        if locals.authenticated && (locals.user.id === answer.userId)
          div(class="edit_answer_block")
            form(action=`/answers/${answer.id}` method='post')
              input(type='hidden' name='questionId' value=questionId)
              input(type='hidden' name='_csrf' value=csrfToken)
              label(for='answerEditText' class="post_answer_label") Edit your answer
              input(type='textArea' name='answerEditText' class='post_answer_textarea')
              button(class="answer_edit_btn" type='submit') Submit
